{"ast":null,"code":"var _jsxFileName = \"/home/obsy/Documents/Projects/FullstackOpen/part2/data-for-countries/src/Country.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Country = _ref => {\n  _s();\n  let {\n    country\n  } = _ref;\n  const [weather, setWeather] = useState({});\n  const languages = Object.values(country.languages);\n  const capitalLatitude = country.capitalInfo.latlng[0];\n  const capitalLongitude = country.capitalInfo.latlng[1];\n  const apiKey = process.env.REACT_APP_API_KEY;\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${capitalLatitude}&lon=${capitalLongitude}&appid=${apiKey}&units=metric`).then(response => setWeather(response.data));\n  }, []);\n  const hasWeather = Object.keys(weather);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", country.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Area: \", country.area]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: languages.map(language => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: language\n        }, language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: country.flags.png\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Wheater in \", country.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature \", weather.main.temp, \" Celsius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${weather.weather[0].icon}@4x.png`,\n        alt: \"weather icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind \", weather.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Country, \"p44c62psaVm/fTquZwTezXTodIU=\");\n_c = Country;\nvar _c;\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["useEffect","useState","axios","Country","country","weather","setWeather","languages","Object","values","capitalLatitude","capitalInfo","latlng","capitalLongitude","apiKey","process","env","REACT_APP_API_KEY","get","then","response","data","hasWeather","keys","name","common","capital","area","map","language","flags","png","main","temp","icon","wind","speed"],"sources":["/home/obsy/Documents/Projects/FullstackOpen/part2/data-for-countries/src/Country.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport axios from \"axios\"\nexport const Country = ({ country }) => {\n  const [weather, setWeather] = useState({})\n  const languages = Object.values(country.languages)\n  const capitalLatitude = country.capitalInfo.latlng[0]\n  const capitalLongitude = country.capitalInfo.latlng[1]\n  const apiKey = process.env.REACT_APP_API_KEY\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${capitalLatitude}&lon=${capitalLongitude}&appid=${apiKey}&units=metric`\n      )\n      .then((response) => setWeather(response.data))\n  }, [])\n  const hasWeather = Object.keys(weather)\n  \n  return (\n    <div>\n      <div>\n        <h1>{country.name.common}</h1>\n        <p>Capital: {country.capital}</p>\n        <p>Area: {country.area}</p>\n      </div>\n      <div>\n        <h2>Languages:</h2>\n        <ul>\n          {languages.map((language) => (\n            <li key={language}>{language}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <img src={country.flags.png}></img>\n      </div>\n      {}\n      <div>\n        <h2>Wheater in {country.capital}</h2>\n        <p>Temperature {weather.main.temp} Celsius</p>\n        <img\n          src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@4x.png`}\n          alt=\"weather icon\"\n        />\n        <p>Wind {weather.wind.speed} m/s</p>\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAA;AACzB,OAAO,MAAMC,OAAO,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAMM,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACL,OAAO,CAACG,SAAS,CAAC;EAClD,MAAMG,eAAe,GAAGN,OAAO,CAACO,WAAW,CAACC,MAAM,CAAC,CAAC,CAAC;EACrD,MAAMC,gBAAgB,GAAGT,OAAO,CAACO,WAAW,CAACC,MAAM,CAAC,CAAC,CAAC;EACtD,MAAME,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAC5CjB,SAAS,CAAC,MAAM;IACdE,KAAK,CACFgB,GAAG,CACD,uDAAsDR,eAAgB,QAAOG,gBAAiB,UAASC,MAAO,eAAc,CAC9H,CACAK,IAAI,CAAEC,QAAQ,IAAKd,UAAU,CAACc,QAAQ,CAACC,IAAI,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,UAAU,GAAGd,MAAM,CAACe,IAAI,CAAClB,OAAO,CAAC;EAEvC,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA,UAAKD,OAAO,CAACoB,IAAI,CAACC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9B;QAAA,WAAG,WAAS,EAACrB,OAAO,CAACsB,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACjC;QAAA,WAAG,QAAM,EAACtB,OAAO,CAACuB,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB,eACN;MAAA,wBACE;QAAA,UAAI;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK,eACnB;QAAA,UACGpB,SAAS,CAACqB,GAAG,CAAEC,QAAQ,iBACtB;UAAA,UAAoBA;QAAQ,GAAnBA,QAAQ;UAAA;UAAA;UAAA;QAAA,QAClB;MAAC;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,eACN;MAAA,uBACE;QAAK,GAAG,EAAEzB,OAAO,CAAC0B,KAAK,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QAC/B,eAEN;MAAA,wBACE;QAAA,WAAI,aAAW,EAAC3B,OAAO,CAACsB,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACrC;QAAA,WAAG,cAAY,EAACrB,OAAO,CAAC2B,IAAI,CAACC,IAAI,EAAC,UAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,eAC9C;QACE,GAAG,EAAG,oCAAmC5B,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAAC6B,IAAK,SAAS;QAC1E,GAAG,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAClB,eACF;QAAA,WAAG,OAAK,EAAC7B,OAAO,CAAC8B,IAAI,CAACC,KAAK,EAAC,MAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GA7CYjC,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}